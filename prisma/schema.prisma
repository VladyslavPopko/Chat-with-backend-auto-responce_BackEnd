generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(cuid()) @map("_id")
  name              String
  surname           String
  email             String    @unique
  avatar            String?
  password          String
  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime  @updatedAt @map("updated_at")
  isOnline          Boolean   @map("is_online") @default(false)

  sentMessages      Message[] @relation("SentMessages")
  receivedMessages  Message[] @relation("ReceivedMessages")
  chatUsers         ChatUser[] 
}

model Chat {
  id              String     @id @default(cuid()) @map("_id")
  name String
  messages        Message[]  @relation("ChatMessages")
  createdAt       DateTime   @default(now()) @map("created_at")
  updatedAt       DateTime   @updatedAt @map("updated_at")
  chatUsers       ChatUser[] 
}

model Message {
  id              String    @id @default(cuid()) @map("_id")
  text            String
  senderId        String
  recipientId     String
  chatId          String
  isRead            Boolean @default(false)
  
  sender          User      @relation("SentMessages", fields: [senderId], references: [id])
  recipient       User      @relation("ReceivedMessages", fields: [recipientId], references: [id])
  chat            Chat?     @relation("ChatMessages", fields: [chatId], references: [id])
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")
}

model ChatUser {
  id       String @id @default(cuid()) @map("_id")
  chatId   String
  userId   String

  chat     Chat @relation(fields: [chatId], references: [id])
  user     User @relation(fields: [userId], references: [id])

  @@index([chatId, userId], name: "chat_user_index") 
}
